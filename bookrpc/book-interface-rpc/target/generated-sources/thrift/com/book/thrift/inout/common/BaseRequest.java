/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.book.thrift.inout.common;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2019-12-27")
public class BaseRequest implements org.apache.thrift.TBase<BaseRequest, BaseRequest._Fields>, java.io.Serializable, Cloneable, Comparable<BaseRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BaseRequest");

  private static final org.apache.thrift.protocol.TField SEQ_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("seqNo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MEMO_FIELD_DESC = new org.apache.thrift.protocol.TField("memo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CREATED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("createdBy", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SOURCE_SYSTEM_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceSystem", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREATED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createdTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField USER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("userType", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SESSION_FIELD_DESC = new org.apache.thrift.protocol.TField("session", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField JURISDICTION_FIELD_DESC = new org.apache.thrift.protocol.TField("jurisdiction", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField BUSINES_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("businesKey", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField BUSINES_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("businesCode", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BaseRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BaseRequestTupleSchemeFactory());
  }

  /**
   * 本次请求的编号
   */
  public String seqNo; // required
  public String memo; // required
  public String createdBy; // required
  /**
   * 来源系统
   */
  public String sourceSystem; // required
  public long createdTime; // required
  public String userType; // required
  /**
   * 登录信息，需要根据source判断来源取不同的登录信息
   */
  public SessionModel session; // required
  /**
   * 权限，多个时用";"隔开，一般是操作权限
   */
  public String jurisdiction; // required
  /**
   * 业务key，在BusinesKeyEnum里定义，根据数据权限检验配合适用(类:RpcInvokePrivilege)
   */
  public String businesKey; // required
  /**
   * 业务code,非特殊情况下传主键，如策略编号，订单号等，数据权限校验，多个时用";"隔开
   */
  public String businesCode; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 本次请求的编号
     */
    SEQ_NO((short)1, "seqNo"),
    MEMO((short)2, "memo"),
    CREATED_BY((short)3, "createdBy"),
    /**
     * 来源系统
     */
    SOURCE_SYSTEM((short)4, "sourceSystem"),
    CREATED_TIME((short)5, "createdTime"),
    USER_TYPE((short)6, "userType"),
    /**
     * 登录信息，需要根据source判断来源取不同的登录信息
     */
    SESSION((short)7, "session"),
    /**
     * 权限，多个时用";"隔开，一般是操作权限
     */
    JURISDICTION((short)8, "jurisdiction"),
    /**
     * 业务key，在BusinesKeyEnum里定义，根据数据权限检验配合适用(类:RpcInvokePrivilege)
     */
    BUSINES_KEY((short)9, "businesKey"),
    /**
     * 业务code,非特殊情况下传主键，如策略编号，订单号等，数据权限校验，多个时用";"隔开
     */
    BUSINES_CODE((short)10, "businesCode");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SEQ_NO
          return SEQ_NO;
        case 2: // MEMO
          return MEMO;
        case 3: // CREATED_BY
          return CREATED_BY;
        case 4: // SOURCE_SYSTEM
          return SOURCE_SYSTEM;
        case 5: // CREATED_TIME
          return CREATED_TIME;
        case 6: // USER_TYPE
          return USER_TYPE;
        case 7: // SESSION
          return SESSION;
        case 8: // JURISDICTION
          return JURISDICTION;
        case 9: // BUSINES_KEY
          return BUSINES_KEY;
        case 10: // BUSINES_CODE
          return BUSINES_CODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATEDTIME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SEQ_NO, new org.apache.thrift.meta_data.FieldMetaData("seqNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMO, new org.apache.thrift.meta_data.FieldMetaData("memo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_BY, new org.apache.thrift.meta_data.FieldMetaData("createdBy", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SOURCE_SYSTEM, new org.apache.thrift.meta_data.FieldMetaData("sourceSystem", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_TIME, new org.apache.thrift.meta_data.FieldMetaData("createdTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("userType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SESSION, new org.apache.thrift.meta_data.FieldMetaData("session", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "SessionModel")));
    tmpMap.put(_Fields.JURISDICTION, new org.apache.thrift.meta_data.FieldMetaData("jurisdiction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINES_KEY, new org.apache.thrift.meta_data.FieldMetaData("businesKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINES_CODE, new org.apache.thrift.meta_data.FieldMetaData("businesCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BaseRequest.class, metaDataMap);
  }

  public BaseRequest() {
  }

  public BaseRequest(
    String seqNo,
    String memo,
    String createdBy,
    String sourceSystem,
    long createdTime,
    String userType,
    SessionModel session,
    String jurisdiction,
    String businesKey,
    String businesCode)
  {
    this();
    this.seqNo = seqNo;
    this.memo = memo;
    this.createdBy = createdBy;
    this.sourceSystem = sourceSystem;
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
    this.userType = userType;
    this.session = session;
    this.jurisdiction = jurisdiction;
    this.businesKey = businesKey;
    this.businesCode = businesCode;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BaseRequest(BaseRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSeqNo()) {
      this.seqNo = other.seqNo;
    }
    if (other.isSetMemo()) {
      this.memo = other.memo;
    }
    if (other.isSetCreatedBy()) {
      this.createdBy = other.createdBy;
    }
    if (other.isSetSourceSystem()) {
      this.sourceSystem = other.sourceSystem;
    }
    this.createdTime = other.createdTime;
    if (other.isSetUserType()) {
      this.userType = other.userType;
    }
    if (other.isSetSession()) {
      this.session = other.session;
    }
    if (other.isSetJurisdiction()) {
      this.jurisdiction = other.jurisdiction;
    }
    if (other.isSetBusinesKey()) {
      this.businesKey = other.businesKey;
    }
    if (other.isSetBusinesCode()) {
      this.businesCode = other.businesCode;
    }
  }

  public BaseRequest deepCopy() {
    return new BaseRequest(this);
  }

  @Override
  public void clear() {
    this.seqNo = null;
    this.memo = null;
    this.createdBy = null;
    this.sourceSystem = null;
    setCreatedTimeIsSet(false);
    this.createdTime = 0;
    this.userType = null;
    this.session = null;
    this.jurisdiction = null;
    this.businesKey = null;
    this.businesCode = null;
  }

  /**
   * 本次请求的编号
   */
  public String getSeqNo() {
    return this.seqNo;
  }

  /**
   * 本次请求的编号
   */
  public BaseRequest setSeqNo(String seqNo) {
    this.seqNo = seqNo;
    return this;
  }

  public void unsetSeqNo() {
    this.seqNo = null;
  }

  /** Returns true if field seqNo is set (has been assigned a value) and false otherwise */
  public boolean isSetSeqNo() {
    return this.seqNo != null;
  }

  public void setSeqNoIsSet(boolean value) {
    if (!value) {
      this.seqNo = null;
    }
  }

  public String getMemo() {
    return this.memo;
  }

  public BaseRequest setMemo(String memo) {
    this.memo = memo;
    return this;
  }

  public void unsetMemo() {
    this.memo = null;
  }

  /** Returns true if field memo is set (has been assigned a value) and false otherwise */
  public boolean isSetMemo() {
    return this.memo != null;
  }

  public void setMemoIsSet(boolean value) {
    if (!value) {
      this.memo = null;
    }
  }

  public String getCreatedBy() {
    return this.createdBy;
  }

  public BaseRequest setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  public void unsetCreatedBy() {
    this.createdBy = null;
  }

  /** Returns true if field createdBy is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedBy() {
    return this.createdBy != null;
  }

  public void setCreatedByIsSet(boolean value) {
    if (!value) {
      this.createdBy = null;
    }
  }

  /**
   * 来源系统
   */
  public String getSourceSystem() {
    return this.sourceSystem;
  }

  /**
   * 来源系统
   */
  public BaseRequest setSourceSystem(String sourceSystem) {
    this.sourceSystem = sourceSystem;
    return this;
  }

  public void unsetSourceSystem() {
    this.sourceSystem = null;
  }

  /** Returns true if field sourceSystem is set (has been assigned a value) and false otherwise */
  public boolean isSetSourceSystem() {
    return this.sourceSystem != null;
  }

  public void setSourceSystemIsSet(boolean value) {
    if (!value) {
      this.sourceSystem = null;
    }
  }

  public long getCreatedTime() {
    return this.createdTime;
  }

  public BaseRequest setCreatedTime(long createdTime) {
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
    return this;
  }

  public void unsetCreatedTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  /** Returns true if field createdTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  public void setCreatedTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATEDTIME_ISSET_ID, value);
  }

  public String getUserType() {
    return this.userType;
  }

  public BaseRequest setUserType(String userType) {
    this.userType = userType;
    return this;
  }

  public void unsetUserType() {
    this.userType = null;
  }

  /** Returns true if field userType is set (has been assigned a value) and false otherwise */
  public boolean isSetUserType() {
    return this.userType != null;
  }

  public void setUserTypeIsSet(boolean value) {
    if (!value) {
      this.userType = null;
    }
  }

  /**
   * 登录信息，需要根据source判断来源取不同的登录信息
   */
  public SessionModel getSession() {
    return this.session;
  }

  /**
   * 登录信息，需要根据source判断来源取不同的登录信息
   */
  public BaseRequest setSession(SessionModel session) {
    this.session = session;
    return this;
  }

  public void unsetSession() {
    this.session = null;
  }

  /** Returns true if field session is set (has been assigned a value) and false otherwise */
  public boolean isSetSession() {
    return this.session != null;
  }

  public void setSessionIsSet(boolean value) {
    if (!value) {
      this.session = null;
    }
  }

  /**
   * 权限，多个时用";"隔开，一般是操作权限
   */
  public String getJurisdiction() {
    return this.jurisdiction;
  }

  /**
   * 权限，多个时用";"隔开，一般是操作权限
   */
  public BaseRequest setJurisdiction(String jurisdiction) {
    this.jurisdiction = jurisdiction;
    return this;
  }

  public void unsetJurisdiction() {
    this.jurisdiction = null;
  }

  /** Returns true if field jurisdiction is set (has been assigned a value) and false otherwise */
  public boolean isSetJurisdiction() {
    return this.jurisdiction != null;
  }

  public void setJurisdictionIsSet(boolean value) {
    if (!value) {
      this.jurisdiction = null;
    }
  }

  /**
   * 业务key，在BusinesKeyEnum里定义，根据数据权限检验配合适用(类:RpcInvokePrivilege)
   */
  public String getBusinesKey() {
    return this.businesKey;
  }

  /**
   * 业务key，在BusinesKeyEnum里定义，根据数据权限检验配合适用(类:RpcInvokePrivilege)
   */
  public BaseRequest setBusinesKey(String businesKey) {
    this.businesKey = businesKey;
    return this;
  }

  public void unsetBusinesKey() {
    this.businesKey = null;
  }

  /** Returns true if field businesKey is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinesKey() {
    return this.businesKey != null;
  }

  public void setBusinesKeyIsSet(boolean value) {
    if (!value) {
      this.businesKey = null;
    }
  }

  /**
   * 业务code,非特殊情况下传主键，如策略编号，订单号等，数据权限校验，多个时用";"隔开
   */
  public String getBusinesCode() {
    return this.businesCode;
  }

  /**
   * 业务code,非特殊情况下传主键，如策略编号，订单号等，数据权限校验，多个时用";"隔开
   */
  public BaseRequest setBusinesCode(String businesCode) {
    this.businesCode = businesCode;
    return this;
  }

  public void unsetBusinesCode() {
    this.businesCode = null;
  }

  /** Returns true if field businesCode is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinesCode() {
    return this.businesCode != null;
  }

  public void setBusinesCodeIsSet(boolean value) {
    if (!value) {
      this.businesCode = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SEQ_NO:
      if (value == null) {
        unsetSeqNo();
      } else {
        setSeqNo((String)value);
      }
      break;

    case MEMO:
      if (value == null) {
        unsetMemo();
      } else {
        setMemo((String)value);
      }
      break;

    case CREATED_BY:
      if (value == null) {
        unsetCreatedBy();
      } else {
        setCreatedBy((String)value);
      }
      break;

    case SOURCE_SYSTEM:
      if (value == null) {
        unsetSourceSystem();
      } else {
        setSourceSystem((String)value);
      }
      break;

    case CREATED_TIME:
      if (value == null) {
        unsetCreatedTime();
      } else {
        setCreatedTime((Long)value);
      }
      break;

    case USER_TYPE:
      if (value == null) {
        unsetUserType();
      } else {
        setUserType((String)value);
      }
      break;

    case SESSION:
      if (value == null) {
        unsetSession();
      } else {
        setSession((SessionModel)value);
      }
      break;

    case JURISDICTION:
      if (value == null) {
        unsetJurisdiction();
      } else {
        setJurisdiction((String)value);
      }
      break;

    case BUSINES_KEY:
      if (value == null) {
        unsetBusinesKey();
      } else {
        setBusinesKey((String)value);
      }
      break;

    case BUSINES_CODE:
      if (value == null) {
        unsetBusinesCode();
      } else {
        setBusinesCode((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SEQ_NO:
      return getSeqNo();

    case MEMO:
      return getMemo();

    case CREATED_BY:
      return getCreatedBy();

    case SOURCE_SYSTEM:
      return getSourceSystem();

    case CREATED_TIME:
      return getCreatedTime();

    case USER_TYPE:
      return getUserType();

    case SESSION:
      return getSession();

    case JURISDICTION:
      return getJurisdiction();

    case BUSINES_KEY:
      return getBusinesKey();

    case BUSINES_CODE:
      return getBusinesCode();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SEQ_NO:
      return isSetSeqNo();
    case MEMO:
      return isSetMemo();
    case CREATED_BY:
      return isSetCreatedBy();
    case SOURCE_SYSTEM:
      return isSetSourceSystem();
    case CREATED_TIME:
      return isSetCreatedTime();
    case USER_TYPE:
      return isSetUserType();
    case SESSION:
      return isSetSession();
    case JURISDICTION:
      return isSetJurisdiction();
    case BUSINES_KEY:
      return isSetBusinesKey();
    case BUSINES_CODE:
      return isSetBusinesCode();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BaseRequest)
      return this.equals((BaseRequest)that);
    return false;
  }

  public boolean equals(BaseRequest that) {
    if (that == null)
      return false;

    boolean this_present_seqNo = true && this.isSetSeqNo();
    boolean that_present_seqNo = true && that.isSetSeqNo();
    if (this_present_seqNo || that_present_seqNo) {
      if (!(this_present_seqNo && that_present_seqNo))
        return false;
      if (!this.seqNo.equals(that.seqNo))
        return false;
    }

    boolean this_present_memo = true && this.isSetMemo();
    boolean that_present_memo = true && that.isSetMemo();
    if (this_present_memo || that_present_memo) {
      if (!(this_present_memo && that_present_memo))
        return false;
      if (!this.memo.equals(that.memo))
        return false;
    }

    boolean this_present_createdBy = true && this.isSetCreatedBy();
    boolean that_present_createdBy = true && that.isSetCreatedBy();
    if (this_present_createdBy || that_present_createdBy) {
      if (!(this_present_createdBy && that_present_createdBy))
        return false;
      if (!this.createdBy.equals(that.createdBy))
        return false;
    }

    boolean this_present_sourceSystem = true && this.isSetSourceSystem();
    boolean that_present_sourceSystem = true && that.isSetSourceSystem();
    if (this_present_sourceSystem || that_present_sourceSystem) {
      if (!(this_present_sourceSystem && that_present_sourceSystem))
        return false;
      if (!this.sourceSystem.equals(that.sourceSystem))
        return false;
    }

    boolean this_present_createdTime = true;
    boolean that_present_createdTime = true;
    if (this_present_createdTime || that_present_createdTime) {
      if (!(this_present_createdTime && that_present_createdTime))
        return false;
      if (this.createdTime != that.createdTime)
        return false;
    }

    boolean this_present_userType = true && this.isSetUserType();
    boolean that_present_userType = true && that.isSetUserType();
    if (this_present_userType || that_present_userType) {
      if (!(this_present_userType && that_present_userType))
        return false;
      if (!this.userType.equals(that.userType))
        return false;
    }

    boolean this_present_session = true && this.isSetSession();
    boolean that_present_session = true && that.isSetSession();
    if (this_present_session || that_present_session) {
      if (!(this_present_session && that_present_session))
        return false;
      if (!this.session.equals(that.session))
        return false;
    }

    boolean this_present_jurisdiction = true && this.isSetJurisdiction();
    boolean that_present_jurisdiction = true && that.isSetJurisdiction();
    if (this_present_jurisdiction || that_present_jurisdiction) {
      if (!(this_present_jurisdiction && that_present_jurisdiction))
        return false;
      if (!this.jurisdiction.equals(that.jurisdiction))
        return false;
    }

    boolean this_present_businesKey = true && this.isSetBusinesKey();
    boolean that_present_businesKey = true && that.isSetBusinesKey();
    if (this_present_businesKey || that_present_businesKey) {
      if (!(this_present_businesKey && that_present_businesKey))
        return false;
      if (!this.businesKey.equals(that.businesKey))
        return false;
    }

    boolean this_present_businesCode = true && this.isSetBusinesCode();
    boolean that_present_businesCode = true && that.isSetBusinesCode();
    if (this_present_businesCode || that_present_businesCode) {
      if (!(this_present_businesCode && that_present_businesCode))
        return false;
      if (!this.businesCode.equals(that.businesCode))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_seqNo = true && (isSetSeqNo());
    list.add(present_seqNo);
    if (present_seqNo)
      list.add(seqNo);

    boolean present_memo = true && (isSetMemo());
    list.add(present_memo);
    if (present_memo)
      list.add(memo);

    boolean present_createdBy = true && (isSetCreatedBy());
    list.add(present_createdBy);
    if (present_createdBy)
      list.add(createdBy);

    boolean present_sourceSystem = true && (isSetSourceSystem());
    list.add(present_sourceSystem);
    if (present_sourceSystem)
      list.add(sourceSystem);

    boolean present_createdTime = true;
    list.add(present_createdTime);
    if (present_createdTime)
      list.add(createdTime);

    boolean present_userType = true && (isSetUserType());
    list.add(present_userType);
    if (present_userType)
      list.add(userType);

    boolean present_session = true && (isSetSession());
    list.add(present_session);
    if (present_session)
      list.add(session);

    boolean present_jurisdiction = true && (isSetJurisdiction());
    list.add(present_jurisdiction);
    if (present_jurisdiction)
      list.add(jurisdiction);

    boolean present_businesKey = true && (isSetBusinesKey());
    list.add(present_businesKey);
    if (present_businesKey)
      list.add(businesKey);

    boolean present_businesCode = true && (isSetBusinesCode());
    list.add(present_businesCode);
    if (present_businesCode)
      list.add(businesCode);

    return list.hashCode();
  }

  @Override
  public int compareTo(BaseRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSeqNo()).compareTo(other.isSetSeqNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSeqNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqNo, other.seqNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMemo()).compareTo(other.isSetMemo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memo, other.memo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedBy()).compareTo(other.isSetCreatedBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdBy, other.createdBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSourceSystem()).compareTo(other.isSetSourceSystem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceSystem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceSystem, other.sourceSystem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedTime()).compareTo(other.isSetCreatedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdTime, other.createdTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserType()).compareTo(other.isSetUserType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userType, other.userType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSession()).compareTo(other.isSetSession());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSession()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.session, other.session);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJurisdiction()).compareTo(other.isSetJurisdiction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJurisdiction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jurisdiction, other.jurisdiction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinesKey()).compareTo(other.isSetBusinesKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinesKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businesKey, other.businesKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinesCode()).compareTo(other.isSetBusinesCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinesCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businesCode, other.businesCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BaseRequest(");
    boolean first = true;

    sb.append("seqNo:");
    if (this.seqNo == null) {
      sb.append("null");
    } else {
      sb.append(this.seqNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memo:");
    if (this.memo == null) {
      sb.append("null");
    } else {
      sb.append(this.memo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdBy:");
    if (this.createdBy == null) {
      sb.append("null");
    } else {
      sb.append(this.createdBy);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceSystem:");
    if (this.sourceSystem == null) {
      sb.append("null");
    } else {
      sb.append(this.sourceSystem);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdTime:");
    sb.append(this.createdTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userType:");
    if (this.userType == null) {
      sb.append("null");
    } else {
      sb.append(this.userType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("session:");
    if (this.session == null) {
      sb.append("null");
    } else {
      sb.append(this.session);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jurisdiction:");
    if (this.jurisdiction == null) {
      sb.append("null");
    } else {
      sb.append(this.jurisdiction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businesKey:");
    if (this.businesKey == null) {
      sb.append("null");
    } else {
      sb.append(this.businesKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businesCode:");
    if (this.businesCode == null) {
      sb.append("null");
    } else {
      sb.append(this.businesCode);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BaseRequestStandardSchemeFactory implements SchemeFactory {
    public BaseRequestStandardScheme getScheme() {
      return new BaseRequestStandardScheme();
    }
  }

  private static class BaseRequestStandardScheme extends StandardScheme<BaseRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BaseRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SEQ_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.seqNo = iprot.readString();
              struct.setSeqNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEMO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.memo = iprot.readString();
              struct.setMemoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdBy = iprot.readString();
              struct.setCreatedByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SOURCE_SYSTEM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sourceSystem = iprot.readString();
              struct.setSourceSystemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdTime = iprot.readI64();
              struct.setCreatedTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userType = iprot.readString();
              struct.setUserTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SESSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.session = new SessionModel();
              struct.session.read(iprot);
              struct.setSessionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // JURISDICTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jurisdiction = iprot.readString();
              struct.setJurisdictionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BUSINES_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businesKey = iprot.readString();
              struct.setBusinesKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BUSINES_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businesCode = iprot.readString();
              struct.setBusinesCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BaseRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.seqNo != null) {
        oprot.writeFieldBegin(SEQ_NO_FIELD_DESC);
        oprot.writeString(struct.seqNo);
        oprot.writeFieldEnd();
      }
      if (struct.memo != null) {
        oprot.writeFieldBegin(MEMO_FIELD_DESC);
        oprot.writeString(struct.memo);
        oprot.writeFieldEnd();
      }
      if (struct.createdBy != null) {
        oprot.writeFieldBegin(CREATED_BY_FIELD_DESC);
        oprot.writeString(struct.createdBy);
        oprot.writeFieldEnd();
      }
      if (struct.sourceSystem != null) {
        oprot.writeFieldBegin(SOURCE_SYSTEM_FIELD_DESC);
        oprot.writeString(struct.sourceSystem);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
      oprot.writeI64(struct.createdTime);
      oprot.writeFieldEnd();
      if (struct.userType != null) {
        oprot.writeFieldBegin(USER_TYPE_FIELD_DESC);
        oprot.writeString(struct.userType);
        oprot.writeFieldEnd();
      }
      if (struct.session != null) {
        oprot.writeFieldBegin(SESSION_FIELD_DESC);
        struct.session.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.jurisdiction != null) {
        oprot.writeFieldBegin(JURISDICTION_FIELD_DESC);
        oprot.writeString(struct.jurisdiction);
        oprot.writeFieldEnd();
      }
      if (struct.businesKey != null) {
        oprot.writeFieldBegin(BUSINES_KEY_FIELD_DESC);
        oprot.writeString(struct.businesKey);
        oprot.writeFieldEnd();
      }
      if (struct.businesCode != null) {
        oprot.writeFieldBegin(BUSINES_CODE_FIELD_DESC);
        oprot.writeString(struct.businesCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BaseRequestTupleSchemeFactory implements SchemeFactory {
    public BaseRequestTupleScheme getScheme() {
      return new BaseRequestTupleScheme();
    }
  }

  private static class BaseRequestTupleScheme extends TupleScheme<BaseRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BaseRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSeqNo()) {
        optionals.set(0);
      }
      if (struct.isSetMemo()) {
        optionals.set(1);
      }
      if (struct.isSetCreatedBy()) {
        optionals.set(2);
      }
      if (struct.isSetSourceSystem()) {
        optionals.set(3);
      }
      if (struct.isSetCreatedTime()) {
        optionals.set(4);
      }
      if (struct.isSetUserType()) {
        optionals.set(5);
      }
      if (struct.isSetSession()) {
        optionals.set(6);
      }
      if (struct.isSetJurisdiction()) {
        optionals.set(7);
      }
      if (struct.isSetBusinesKey()) {
        optionals.set(8);
      }
      if (struct.isSetBusinesCode()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetSeqNo()) {
        oprot.writeString(struct.seqNo);
      }
      if (struct.isSetMemo()) {
        oprot.writeString(struct.memo);
      }
      if (struct.isSetCreatedBy()) {
        oprot.writeString(struct.createdBy);
      }
      if (struct.isSetSourceSystem()) {
        oprot.writeString(struct.sourceSystem);
      }
      if (struct.isSetCreatedTime()) {
        oprot.writeI64(struct.createdTime);
      }
      if (struct.isSetUserType()) {
        oprot.writeString(struct.userType);
      }
      if (struct.isSetSession()) {
        struct.session.write(oprot);
      }
      if (struct.isSetJurisdiction()) {
        oprot.writeString(struct.jurisdiction);
      }
      if (struct.isSetBusinesKey()) {
        oprot.writeString(struct.businesKey);
      }
      if (struct.isSetBusinesCode()) {
        oprot.writeString(struct.businesCode);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BaseRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.seqNo = iprot.readString();
        struct.setSeqNoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.memo = iprot.readString();
        struct.setMemoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createdBy = iprot.readString();
        struct.setCreatedByIsSet(true);
      }
      if (incoming.get(3)) {
        struct.sourceSystem = iprot.readString();
        struct.setSourceSystemIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createdTime = iprot.readI64();
        struct.setCreatedTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.userType = iprot.readString();
        struct.setUserTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.session = new SessionModel();
        struct.session.read(iprot);
        struct.setSessionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.jurisdiction = iprot.readString();
        struct.setJurisdictionIsSet(true);
      }
      if (incoming.get(8)) {
        struct.businesKey = iprot.readString();
        struct.setBusinesKeyIsSet(true);
      }
      if (incoming.get(9)) {
        struct.businesCode = iprot.readString();
        struct.setBusinesCodeIsSet(true);
      }
    }
  }

}

